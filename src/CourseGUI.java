import javax.swing.*;
import java.awt.*;
import java.util.stream.IntStream;

public class CourseGUI {

    private JTable myTable;
    private JTextField myTextField;
    private JButton myButton;
    private JPanel panel;

    private int[] selectRows;

    private void createUIComponents() {
        myTable = new JTable(MyCourse.getRowData(), MyCourse.getColumnName());
        // Disable data edition.
        myTable.setDefaultEditor(Object.class, null);

        // Set width.
        myTable.setPreferredSize(new Dimension(MyCourse.columnWidthSum, 120));

        // Set each column's width.
        IntStream.range(0, MyCourse.getColumnName().size()).forEach(i -> {
            myTable.getColumnModel().getColumn(i).setPreferredWidth(MyCourse.columnPreferredWidth[i]);
        });
    }

    public static void main(String[] args) {
        JFrame frame = new JFrame("CourseGUI");
        frame.setContentPane(new CourseGUI().panel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setResizable(false);
        frame.setSize(new Dimension(MyCourse.columnWidthSum, 200));
        frame.setVisible(true);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        panel = new JPanel();
        panel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(2, 2, new Insets(0, 0, 0, 0), -1, -1));
        myTextField = new JTextField();
        panel.add(myTextField, new com.intellij.uiDesigner.core.GridConstraints(1, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JScrollPane scrollPane1 = new JScrollPane();
        panel.add(scrollPane1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 1, 2, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_BOTH, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        myTable.setAutoCreateRowSorter(true);
        myTable.setFillsViewportHeight(true);
        myTable.setPreferredScrollableViewportSize(new Dimension(600, 150));
        myTable.putClientProperty("JTable.autoStartsEdit", Boolean.FALSE);
        myTable.putClientProperty("Table.isFileList", Boolean.FALSE);
        scrollPane1.setViewportView(myTable);
        myButton = new JButton();
        myButton.setText("Button");
        panel.add(myButton, new com.intellij.uiDesigner.core.GridConstraints(1, 1, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }

}
